<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='MASTER File 2021 Tableau' inline='true' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MASTER File 2021 Tableau' name='textscan.1ej9yr0122hsrg11qmmg41a3spos'>
            <connection class='textscan' directory='C:/Users/suzan/Desktop/NSS/Projects/Capstone/data' filename='MASTER File 2021 Tableau.csv' password='' server='' />
          </named-connection>
          <named-connection caption='peak_period' name='textscan.0y8nhjq0k9axns13k0zuq1tk9zjc'>
            <connection class='textscan' directory='C:/Users/suzan/Desktop/NSS/Projects/Capstone/data' filename='peak_period.csv' password='' server='' />
          </named-connection>
          <named-connection caption='crashes' name='textscan.101hotr0dsfxz2100isjq1rbc13w'>
            <connection class='textscan' directory='C:/Users/suzan/Desktop/NSS/Projects/Capstone/data' filename='crashes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='Daily Weather Formatted.csv' table='[Daily Weather Formatted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='date' name='datetime' ordinal='1' />
            <column datatype='real' name='tempmax' ordinal='2' />
            <column datatype='real' name='tempmin' ordinal='3' />
            <column datatype='real' name='temp' ordinal='4' />
            <column datatype='real' name='feelslikemax' ordinal='5' />
            <column datatype='real' name='feelslikemin' ordinal='6' />
            <column datatype='real' name='feelslike' ordinal='7' />
            <column datatype='real' name='dew' ordinal='8' />
            <column datatype='real' name='humidity' ordinal='9' />
            <column datatype='real' name='precip' ordinal='10' />
            <column datatype='real' name='precipcover' ordinal='11' />
            <column datatype='real' name='snow' ordinal='12' />
            <column datatype='real' name='snowdepth' ordinal='13' />
            <column datatype='real' name='windgust' ordinal='14' />
            <column datatype='real' name='windspeed' ordinal='15' />
            <column datatype='real' name='winddir' ordinal='16' />
            <column datatype='real' name='sealevelpressure' ordinal='17' />
            <column datatype='real' name='cloudcover' ordinal='18' />
            <column datatype='real' name='visibility' ordinal='19' />
            <column datatype='datetime' name='sunrise' ordinal='20' />
            <column datatype='datetime' name='sunset' ordinal='21' />
            <column datatype='real' name='moonphase' ordinal='22' />
            <column datatype='string' name='conditions' ordinal='23' />
            <column datatype='string' name='description' ordinal='24' />
            <column datatype='string' name='icon' ordinal='25' />
            <column datatype='string' name='stations' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='MASTER File 2021 Tableau.csv' table='[MASTER File 2021 Tableau#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Region' ordinal='1' />
              <column datatype='integer' name='Incident ID' ordinal='2' />
              <column datatype='string' name='Incident Type' ordinal='3' />
              <column datatype='string' name='Full Location ' ordinal='4' />
              <column datatype='date' name='Start Date' ordinal='5' />
              <column datatype='string' name='Start Time' ordinal='6' />
              <column datatype='real' name='Duration ICT' ordinal='7' />
              <column datatype='integer' name='Lanes Blocked' ordinal='8' />
              <column datatype='real' name='Blockage Duration RCT' ordinal='9' />
              <column datatype='real' name='Response Time' ordinal='10' />
              <column datatype='string' name='Rural/_Urban' ordinal='11' />
              <column datatype='integer' name='Key ' ordinal='12' />
              <column datatype='string' name='County' ordinal='13' />
              <column datatype='string' name='Interstate' ordinal='14' />
              <column datatype='string' name='Route' ordinal='15' />
              <column datatype='string' name='Direction' ordinal='16' />
              <column datatype='string' name='Unnamed: 16' ordinal='17' />
              <column datatype='string' name='Description' ordinal='18' />
              <column datatype='real' name='Inc MM' ordinal='19' />
              <column datatype='real' name='Latitude' ordinal='20' />
              <column datatype='real' name='Longitude' ordinal='21' />
              <column datatype='string' name='Severity Lanes' ordinal='22' />
              <column datatype='string' name='Severity Duration' ordinal='23' />
              <column datatype='string' name='Severity' ordinal='24' />
              <column datatype='real' name='Temp' ordinal='25' />
              <column datatype='real' name='Prec' ordinal='26' />
              <column datatype='string' name='Condition' ordinal='27' />
              <column datatype='string' name='name' ordinal='28' />
              <column datatype='date' name='datetime' ordinal='29' />
              <column datatype='real' name='tempmax' ordinal='30' />
              <column datatype='real' name='tempmin' ordinal='31' />
              <column datatype='real' name='temp' ordinal='32' />
              <column datatype='real' name='feelslikemax' ordinal='33' />
              <column datatype='real' name='feelslikemin' ordinal='34' />
              <column datatype='real' name='feelslike' ordinal='35' />
              <column datatype='real' name='dew' ordinal='36' />
              <column datatype='real' name='humidity' ordinal='37' />
              <column datatype='real' name='precip' ordinal='38' />
              <column datatype='real' name='precipcover' ordinal='39' />
              <column datatype='real' name='snow' ordinal='40' />
              <column datatype='real' name='snowdepth' ordinal='41' />
              <column datatype='real' name='windgust' ordinal='42' />
              <column datatype='real' name='windspeed' ordinal='43' />
              <column datatype='real' name='winddir' ordinal='44' />
              <column datatype='real' name='sealevelpressure' ordinal='45' />
              <column datatype='real' name='cloudcover' ordinal='46' />
              <column datatype='real' name='visibility' ordinal='47' />
              <column datatype='datetime' name='sunrise' ordinal='48' />
              <column datatype='datetime' name='sunset' ordinal='49' />
              <column datatype='real' name='moonphase' ordinal='50' />
              <column datatype='string' name='conditions' ordinal='51' />
              <column datatype='string' name='description' ordinal='52' />
              <column datatype='string' name='icon' ordinal='53' />
              <column datatype='string' name='stations' ordinal='54' />
              <column datatype='string' name='geometry' ordinal='55' />
            </columns>
          </relation>
          <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='Daily Weather Formatted.csv' table='[Daily Weather Formatted#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='name' ordinal='0' />
              <column datatype='date' name='datetime' ordinal='1' />
              <column datatype='real' name='tempmax' ordinal='2' />
              <column datatype='real' name='tempmin' ordinal='3' />
              <column datatype='real' name='temp' ordinal='4' />
              <column datatype='real' name='feelslikemax' ordinal='5' />
              <column datatype='real' name='feelslikemin' ordinal='6' />
              <column datatype='real' name='feelslike' ordinal='7' />
              <column datatype='real' name='dew' ordinal='8' />
              <column datatype='real' name='humidity' ordinal='9' />
              <column datatype='real' name='precip' ordinal='10' />
              <column datatype='real' name='precipcover' ordinal='11' />
              <column datatype='real' name='snow' ordinal='12' />
              <column datatype='real' name='snowdepth' ordinal='13' />
              <column datatype='real' name='windgust' ordinal='14' />
              <column datatype='real' name='windspeed' ordinal='15' />
              <column datatype='real' name='winddir' ordinal='16' />
              <column datatype='real' name='sealevelpressure' ordinal='17' />
              <column datatype='real' name='cloudcover' ordinal='18' />
              <column datatype='real' name='visibility' ordinal='19' />
              <column datatype='datetime' name='sunrise' ordinal='20' />
              <column datatype='datetime' name='sunset' ordinal='21' />
              <column datatype='real' name='moonphase' ordinal='22' />
              <column datatype='string' name='conditions' ordinal='23' />
              <column datatype='string' name='description' ordinal='24' />
              <column datatype='string' name='icon' ordinal='25' />
              <column datatype='string' name='stations' ordinal='26' />
            </columns>
          </relation>
          <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='davidson_shooting.csv' table='[davidson_shooting#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Region' ordinal='1' />
              <column datatype='integer' name='Incident ID' ordinal='2' />
              <column datatype='string' name='Incident Type' ordinal='3' />
              <column datatype='string' name='Full Location ' ordinal='4' />
              <column datatype='date' name='Start Date' ordinal='5' />
              <column datatype='string' name='Start Time' ordinal='6' />
              <column datatype='real' name='Duration ICT' ordinal='7' />
              <column datatype='integer' name='Lanes Blocked' ordinal='8' />
              <column datatype='real' name='Blockage Duration RCT' ordinal='9' />
              <column datatype='real' name='Response Time' ordinal='10' />
              <column datatype='string' name='Rural/_Urban' ordinal='11' />
              <column datatype='integer' name='Key ' ordinal='12' />
              <column datatype='string' name='County' ordinal='13' />
              <column datatype='string' name='Interstate' ordinal='14' />
              <column datatype='string' name='Route' ordinal='15' />
              <column datatype='string' name='Direction' ordinal='16' />
              <column datatype='string' name='Unnamed: 16' ordinal='17' />
              <column datatype='string' name='Description' ordinal='18' />
              <column datatype='real' name='Inc MM' ordinal='19' />
              <column datatype='real' name='Latitude' ordinal='20' />
              <column datatype='real' name='Longitude' ordinal='21' />
              <column datatype='string' name='Severity Lanes' ordinal='22' />
              <column datatype='string' name='Severity Duration' ordinal='23' />
              <column datatype='string' name='Severity' ordinal='24' />
              <column datatype='real' name='Temp' ordinal='25' />
              <column datatype='real' name='Prec' ordinal='26' />
              <column datatype='string' name='Condition' ordinal='27' />
              <column datatype='string' name='name' ordinal='28' />
              <column datatype='date' name='datetime' ordinal='29' />
              <column datatype='real' name='tempmax' ordinal='30' />
              <column datatype='real' name='tempmin' ordinal='31' />
              <column datatype='real' name='temp' ordinal='32' />
              <column datatype='real' name='feelslikemax' ordinal='33' />
              <column datatype='real' name='feelslikemin' ordinal='34' />
              <column datatype='real' name='feelslike' ordinal='35' />
              <column datatype='real' name='dew' ordinal='36' />
              <column datatype='real' name='humidity' ordinal='37' />
              <column datatype='real' name='precip' ordinal='38' />
              <column datatype='real' name='precipcover' ordinal='39' />
              <column datatype='real' name='snow' ordinal='40' />
              <column datatype='real' name='snowdepth' ordinal='41' />
              <column datatype='real' name='windgust' ordinal='42' />
              <column datatype='real' name='windspeed' ordinal='43' />
              <column datatype='real' name='winddir' ordinal='44' />
              <column datatype='real' name='sealevelpressure' ordinal='45' />
              <column datatype='real' name='cloudcover' ordinal='46' />
              <column datatype='real' name='visibility' ordinal='47' />
              <column datatype='datetime' name='sunrise' ordinal='48' />
              <column datatype='datetime' name='sunset' ordinal='49' />
              <column datatype='real' name='moonphase' ordinal='50' />
              <column datatype='string' name='conditions' ordinal='51' />
              <column datatype='string' name='description' ordinal='52' />
              <column datatype='string' name='icon' ordinal='53' />
              <column datatype='string' name='stations' ordinal='54' />
              <column datatype='string' name='geometry' ordinal='55' />
            </columns>
          </relation>
          <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='days.csv' table='[days#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='integer' name='Count' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='peak_time.csv' table='[peak_time#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Start Time' ordinal='1' />
              <column datatype='integer' name='Count' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Blockage Duration RCT (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Blockage Duration RCT]' />
          <map key='[Blockage Duration RCT]' value='[MASTER File 2021 Tableau.csv].[Blockage Duration RCT]' />
          <map key='[Condition (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Condition]' />
          <map key='[Condition]' value='[MASTER File 2021 Tableau.csv].[Condition]' />
          <map key='[Count (peak_time.csv)]' value='[peak_time.csv].[Count]' />
          <map key='[Count]' value='[days.csv].[Count]' />
          <map key='[County (davidson_shooting.csv)]' value='[davidson_shooting.csv].[County]' />
          <map key='[County]' value='[MASTER File 2021 Tableau.csv].[County]' />
          <map key='[Description (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Description]' />
          <map key='[Description]' value='[MASTER File 2021 Tableau.csv].[Description]' />
          <map key='[Direction (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Direction]' />
          <map key='[Direction]' value='[MASTER File 2021 Tableau.csv].[Direction]' />
          <map key='[Duration ICT (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Duration ICT]' />
          <map key='[Duration ICT]' value='[MASTER File 2021 Tableau.csv].[Duration ICT]' />
          <map key='[F1 (davidson_shooting.csv)]' value='[davidson_shooting.csv].[F1]' />
          <map key='[F1 (days.csv)]' value='[days.csv].[F1]' />
          <map key='[F1 (peak_time.csv)]' value='[peak_time.csv].[F1]' />
          <map key='[F1]' value='[MASTER File 2021 Tableau.csv].[F1]' />
          <map key='[Full Location  (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Full Location ]' />
          <map key='[Full Location ]' value='[MASTER File 2021 Tableau.csv].[Full Location ]' />
          <map key='[Inc MM (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Inc MM]' />
          <map key='[Inc MM]' value='[MASTER File 2021 Tableau.csv].[Inc MM]' />
          <map key='[Incident ID (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Incident ID]' />
          <map key='[Incident ID]' value='[MASTER File 2021 Tableau.csv].[Incident ID]' />
          <map key='[Incident Type (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Incident Type]' />
          <map key='[Incident Type]' value='[MASTER File 2021 Tableau.csv].[Incident Type]' />
          <map key='[Interstate (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Interstate]' />
          <map key='[Interstate]' value='[MASTER File 2021 Tableau.csv].[Interstate]' />
          <map key='[Key  (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Key ]' />
          <map key='[Key ]' value='[MASTER File 2021 Tableau.csv].[Key ]' />
          <map key='[Lanes Blocked (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Lanes Blocked]' />
          <map key='[Lanes Blocked]' value='[MASTER File 2021 Tableau.csv].[Lanes Blocked]' />
          <map key='[Latitude (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Latitude]' />
          <map key='[Latitude]' value='[MASTER File 2021 Tableau.csv].[Latitude]' />
          <map key='[Longitude (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Longitude]' />
          <map key='[Longitude]' value='[MASTER File 2021 Tableau.csv].[Longitude]' />
          <map key='[Prec (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Prec]' />
          <map key='[Prec]' value='[MASTER File 2021 Tableau.csv].[Prec]' />
          <map key='[Region (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Region]' />
          <map key='[Region]' value='[MASTER File 2021 Tableau.csv].[Region]' />
          <map key='[Response Time (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Response Time]' />
          <map key='[Response Time]' value='[MASTER File 2021 Tableau.csv].[Response Time]' />
          <map key='[Route (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Route]' />
          <map key='[Route]' value='[MASTER File 2021 Tableau.csv].[Route]' />
          <map key='[Rural/_Urban (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Rural/_Urban]' />
          <map key='[Rural/_Urban]' value='[MASTER File 2021 Tableau.csv].[Rural/_Urban]' />
          <map key='[Severity (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Severity]' />
          <map key='[Severity Duration (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Severity Duration]' />
          <map key='[Severity Duration]' value='[MASTER File 2021 Tableau.csv].[Severity Duration]' />
          <map key='[Severity Lanes (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Severity Lanes]' />
          <map key='[Severity Lanes]' value='[MASTER File 2021 Tableau.csv].[Severity Lanes]' />
          <map key='[Severity]' value='[MASTER File 2021 Tableau.csv].[Severity]' />
          <map key='[Start Date (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Start Date]' />
          <map key='[Start Date (days.csv)]' value='[days.csv].[Start Date]' />
          <map key='[Start Date]' value='[MASTER File 2021 Tableau.csv].[Start Date]' />
          <map key='[Start Time (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Start Time]' />
          <map key='[Start Time (peak_time.csv)]' value='[peak_time.csv].[Start Time]' />
          <map key='[Start Time]' value='[MASTER File 2021 Tableau.csv].[Start Time]' />
          <map key='[Temp (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Temp]' />
          <map key='[Temp]' value='[MASTER File 2021 Tableau.csv].[Temp]' />
          <map key='[Unnamed: 16 (davidson_shooting.csv)]' value='[davidson_shooting.csv].[Unnamed: 16]' />
          <map key='[Unnamed: 16]' value='[MASTER File 2021 Tableau.csv].[Unnamed: 16]' />
          <map key='[cloudcover (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[cloudcover]' />
          <map key='[cloudcover (davidson_shooting.csv)]' value='[davidson_shooting.csv].[cloudcover]' />
          <map key='[cloudcover]' value='[MASTER File 2021 Tableau.csv].[cloudcover]' />
          <map key='[conditions (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[conditions]' />
          <map key='[conditions (davidson_shooting.csv)]' value='[davidson_shooting.csv].[conditions]' />
          <map key='[conditions]' value='[MASTER File 2021 Tableau.csv].[conditions]' />
          <map key='[datetime (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[datetime]' />
          <map key='[datetime (davidson_shooting.csv)]' value='[davidson_shooting.csv].[datetime]' />
          <map key='[datetime]' value='[MASTER File 2021 Tableau.csv].[datetime]' />
          <map key='[description (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[description]' />
          <map key='[description (davidson_shooting.csv)]' value='[davidson_shooting.csv].[description]' />
          <map key='[description]' value='[MASTER File 2021 Tableau.csv].[description]' />
          <map key='[dew (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[dew]' />
          <map key='[dew (davidson_shooting.csv)]' value='[davidson_shooting.csv].[dew]' />
          <map key='[dew]' value='[MASTER File 2021 Tableau.csv].[dew]' />
          <map key='[feelslike (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[feelslike]' />
          <map key='[feelslike (davidson_shooting.csv)]' value='[davidson_shooting.csv].[feelslike]' />
          <map key='[feelslike]' value='[MASTER File 2021 Tableau.csv].[feelslike]' />
          <map key='[feelslikemax (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[feelslikemax]' />
          <map key='[feelslikemax (davidson_shooting.csv)]' value='[davidson_shooting.csv].[feelslikemax]' />
          <map key='[feelslikemax]' value='[MASTER File 2021 Tableau.csv].[feelslikemax]' />
          <map key='[feelslikemin (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[feelslikemin]' />
          <map key='[feelslikemin (davidson_shooting.csv)]' value='[davidson_shooting.csv].[feelslikemin]' />
          <map key='[feelslikemin]' value='[MASTER File 2021 Tableau.csv].[feelslikemin]' />
          <map key='[geometry (davidson_shooting.csv)]' value='[davidson_shooting.csv].[geometry]' />
          <map key='[geometry]' value='[MASTER File 2021 Tableau.csv].[geometry]' />
          <map key='[humidity (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[humidity]' />
          <map key='[humidity (davidson_shooting.csv)]' value='[davidson_shooting.csv].[humidity]' />
          <map key='[humidity]' value='[MASTER File 2021 Tableau.csv].[humidity]' />
          <map key='[icon (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[icon]' />
          <map key='[icon (davidson_shooting.csv)]' value='[davidson_shooting.csv].[icon]' />
          <map key='[icon]' value='[MASTER File 2021 Tableau.csv].[icon]' />
          <map key='[moonphase (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[moonphase]' />
          <map key='[moonphase (davidson_shooting.csv)]' value='[davidson_shooting.csv].[moonphase]' />
          <map key='[moonphase]' value='[MASTER File 2021 Tableau.csv].[moonphase]' />
          <map key='[name (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[name]' />
          <map key='[name (davidson_shooting.csv)]' value='[davidson_shooting.csv].[name]' />
          <map key='[name]' value='[MASTER File 2021 Tableau.csv].[name]' />
          <map key='[precip (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[precip]' />
          <map key='[precip (davidson_shooting.csv)]' value='[davidson_shooting.csv].[precip]' />
          <map key='[precip]' value='[MASTER File 2021 Tableau.csv].[precip]' />
          <map key='[precipcover (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[precipcover]' />
          <map key='[precipcover (davidson_shooting.csv)]' value='[davidson_shooting.csv].[precipcover]' />
          <map key='[precipcover]' value='[MASTER File 2021 Tableau.csv].[precipcover]' />
          <map key='[sealevelpressure (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[sealevelpressure]' />
          <map key='[sealevelpressure (davidson_shooting.csv)]' value='[davidson_shooting.csv].[sealevelpressure]' />
          <map key='[sealevelpressure]' value='[MASTER File 2021 Tableau.csv].[sealevelpressure]' />
          <map key='[snow (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[snow]' />
          <map key='[snow (davidson_shooting.csv)]' value='[davidson_shooting.csv].[snow]' />
          <map key='[snow]' value='[MASTER File 2021 Tableau.csv].[snow]' />
          <map key='[snowdepth (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[snowdepth]' />
          <map key='[snowdepth (davidson_shooting.csv)]' value='[davidson_shooting.csv].[snowdepth]' />
          <map key='[snowdepth]' value='[MASTER File 2021 Tableau.csv].[snowdepth]' />
          <map key='[stations (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[stations]' />
          <map key='[stations (davidson_shooting.csv)]' value='[davidson_shooting.csv].[stations]' />
          <map key='[stations]' value='[MASTER File 2021 Tableau.csv].[stations]' />
          <map key='[sunrise (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[sunrise]' />
          <map key='[sunrise (davidson_shooting.csv)]' value='[davidson_shooting.csv].[sunrise]' />
          <map key='[sunrise]' value='[MASTER File 2021 Tableau.csv].[sunrise]' />
          <map key='[sunset (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[sunset]' />
          <map key='[sunset (davidson_shooting.csv)]' value='[davidson_shooting.csv].[sunset]' />
          <map key='[sunset]' value='[MASTER File 2021 Tableau.csv].[sunset]' />
          <map key='[temp (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[temp]' />
          <map key='[temp (davidson_shooting.csv)]' value='[davidson_shooting.csv].[temp]' />
          <map key='[temp]' value='[MASTER File 2021 Tableau.csv].[temp]' />
          <map key='[tempmax (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[tempmax]' />
          <map key='[tempmax (davidson_shooting.csv)]' value='[davidson_shooting.csv].[tempmax]' />
          <map key='[tempmax]' value='[MASTER File 2021 Tableau.csv].[tempmax]' />
          <map key='[tempmin (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[tempmin]' />
          <map key='[tempmin (davidson_shooting.csv)]' value='[davidson_shooting.csv].[tempmin]' />
          <map key='[tempmin]' value='[MASTER File 2021 Tableau.csv].[tempmin]' />
          <map key='[visibility (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[visibility]' />
          <map key='[visibility (davidson_shooting.csv)]' value='[davidson_shooting.csv].[visibility]' />
          <map key='[visibility]' value='[MASTER File 2021 Tableau.csv].[visibility]' />
          <map key='[winddir (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[winddir]' />
          <map key='[winddir (davidson_shooting.csv)]' value='[davidson_shooting.csv].[winddir]' />
          <map key='[winddir]' value='[MASTER File 2021 Tableau.csv].[winddir]' />
          <map key='[windgust (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[windgust]' />
          <map key='[windgust (davidson_shooting.csv)]' value='[davidson_shooting.csv].[windgust]' />
          <map key='[windgust]' value='[MASTER File 2021 Tableau.csv].[windgust]' />
          <map key='[windspeed (Daily Weather Formatted.csv)]' value='[Daily Weather Formatted.csv].[windspeed]' />
          <map key='[windspeed (davidson_shooting.csv)]' value='[davidson_shooting.csv].[windspeed]' />
          <map key='[windspeed]' value='[MASTER File 2021 Tableau.csv].[windspeed]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[days.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[peak_time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident ID]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Incident ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Full Location </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Full Location ]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Full Location </remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Time]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Start Time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration ICT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Duration ICT]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Duration ICT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lanes Blocked</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lanes Blocked]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Lanes Blocked</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blockage Duration RCT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Blockage Duration RCT]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Blockage Duration RCT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Response Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Response Time]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Response Time</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural/_Urban</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rural/_Urban]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Rural/_Urban</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Key ]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Key </remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interstate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Interstate]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Interstate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Route]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Direction]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Direction</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unnamed: 16]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Unnamed: 16</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inc MM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inc MM]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Inc MM</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity Lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity Lanes]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Severity Lanes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity Duration]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Severity Duration</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Severity</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Temp</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prec]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Prec</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmax]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>tempmax</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmin]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>tempmin</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemax]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>feelslikemax</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemin]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>feelslikemin</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslike</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslike]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>feelslike</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dew</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dew]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>dew</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precip]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>precip</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipcover]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>precipcover</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snow]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>snow</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snowdepth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snowdepth]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>snowdepth</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windgust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windgust]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>windgust</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winddir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[winddir]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>winddir</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sealevelpressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sealevelpressure]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>sealevelpressure</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cloudcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cloudcover]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>cloudcover</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>visibility</remote-name>
            <remote-type>5</remote-type>
            <local-name>[visibility]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>visibility</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunrise</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunrise]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>sunrise</remote-alias>
            <ordinal>48</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunset</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunset]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>sunset</remote-alias>
            <ordinal>49</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moonphase</remote-name>
            <remote-type>5</remote-type>
            <local-name>[moonphase]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>moonphase</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conditions]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>conditions</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icon]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>icon</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stations]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>stations</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geometry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geometry]</local-name>
            <parent-name>[MASTER File 2021 Tableau.csv]</parent-name>
            <remote-alias>geometry</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datetime (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>57</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmax (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>tempmax</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmin (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>tempmin</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemax (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>feelslikemax</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemin (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>feelslikemin</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslike</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslike (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>feelslike</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dew</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dew (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>dew</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precip (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>precip</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipcover (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>precipcover</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snow (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>snow</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snowdepth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snowdepth (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>snowdepth</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windgust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windgust (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>windgust</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winddir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[winddir (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>winddir</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sealevelpressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sealevelpressure (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>sealevelpressure</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cloudcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cloudcover (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>cloudcover</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>visibility</remote-name>
            <remote-type>5</remote-type>
            <local-name>[visibility (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>visibility</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunrise</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunrise (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>sunrise</remote-alias>
            <ordinal>76</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunset</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunset (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>sunset</remote-alias>
            <ordinal>77</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moonphase</remote-name>
            <remote-type>5</remote-type>
            <local-name>[moonphase (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>moonphase</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conditions (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>conditions</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icon (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>icon</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stations (Daily Weather Formatted.csv)]</local-name>
            <parent-name>[Daily Weather Formatted.csv]</parent-name>
            <remote-alias>stations</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident ID (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Incident ID</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident Type (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Full Location </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Full Location  (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Full Location </remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Start Date (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>88</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Time (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Start Time</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration ICT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Duration ICT (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Duration ICT</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lanes Blocked</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lanes Blocked (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Lanes Blocked</remote-alias>
            <ordinal>91</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blockage Duration RCT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Blockage Duration RCT (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Blockage Duration RCT</remote-alias>
            <ordinal>92</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Response Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Response Time (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Response Time</remote-alias>
            <ordinal>93</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural/_Urban</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rural/_Urban (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Rural/_Urban</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Key </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Key  (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Key </remote-alias>
            <ordinal>95</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interstate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Interstate (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Interstate</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Route (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Direction (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Direction</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unnamed: 16 (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Unnamed: 16</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inc MM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inc MM (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Inc MM</remote-alias>
            <ordinal>102</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>103</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>104</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity Lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity Lanes (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Severity Lanes</remote-alias>
            <ordinal>105</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity Duration (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Severity Duration</remote-alias>
            <ordinal>106</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Severity (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Severity</remote-alias>
            <ordinal>107</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temp (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Temp</remote-alias>
            <ordinal>108</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prec (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Prec</remote-alias>
            <ordinal>109</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>110</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>111</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datetime (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>112</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmax (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>tempmax</remote-alias>
            <ordinal>113</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tempmin (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>tempmin</remote-alias>
            <ordinal>114</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>115</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemax (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>feelslikemax</remote-alias>
            <ordinal>116</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslikemin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslikemin (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>feelslikemin</remote-alias>
            <ordinal>117</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feelslike</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feelslike (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>feelslike</remote-alias>
            <ordinal>118</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dew</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dew (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>dew</remote-alias>
            <ordinal>119</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>120</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precip (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>precip</remote-alias>
            <ordinal>121</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipcover (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>precipcover</remote-alias>
            <ordinal>122</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snow (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>snow</remote-alias>
            <ordinal>123</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snowdepth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[snowdepth (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>snowdepth</remote-alias>
            <ordinal>124</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windgust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windgust (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>windgust</remote-alias>
            <ordinal>125</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>126</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winddir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[winddir (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>winddir</remote-alias>
            <ordinal>127</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sealevelpressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sealevelpressure (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>sealevelpressure</remote-alias>
            <ordinal>128</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cloudcover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cloudcover (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>cloudcover</remote-alias>
            <ordinal>129</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>visibility</remote-name>
            <remote-type>5</remote-type>
            <local-name>[visibility (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>visibility</remote-alias>
            <ordinal>130</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunrise</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunrise (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>sunrise</remote-alias>
            <ordinal>131</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sunset</remote-name>
            <remote-type>135</remote-type>
            <local-name>[sunset (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>sunset</remote-alias>
            <ordinal>132</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moonphase</remote-name>
            <remote-type>5</remote-type>
            <local-name>[moonphase (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>moonphase</remote-alias>
            <ordinal>133</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conditions (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>conditions</remote-alias>
            <ordinal>134</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>135</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icon (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>icon</remote-alias>
            <ordinal>136</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stations (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>stations</remote-alias>
            <ordinal>137</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geometry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geometry (davidson_shooting.csv)]</local-name>
            <parent-name>[davidson_shooting.csv]</parent-name>
            <remote-alias>geometry</remote-alias>
            <ordinal>138</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (days.csv)]</local-name>
            <parent-name>[days.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>139</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days.csv_AF74184E6F394FA48D81D944A318A375]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Start Date (days.csv)]</local-name>
            <parent-name>[days.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>140</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days.csv_AF74184E6F394FA48D81D944A318A375]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[days.csv]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>141</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days.csv_AF74184E6F394FA48D81D944A318A375]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (peak_time.csv)]</local-name>
            <parent-name>[peak_time.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>142</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Start Time (peak_time.csv)]</local-name>
            <parent-name>[peak_time.csv]</parent-name>
            <remote-alias>Start Time</remote-alias>
            <ordinal>143</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count (peak_time.csv)]</local-name>
            <parent-name>[peak_time.csv]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>144</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Blockage Duration RCT (davidson shooting.csv)' datatype='real' name='[Blockage Duration RCT (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Condition (davidson shooting.csv)' datatype='string' name='[Condition (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Count (peak time.csv)' datatype='integer' name='[Count (peak_time.csv)]' role='measure' type='quantitative' />
      <column caption='County (davidson shooting.csv)' datatype='string' name='[County (davidson_shooting.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Description (davidson shooting.csv)' datatype='string' name='[Description (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Direction (davidson shooting.csv)' datatype='string' name='[Direction (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Duration ICT (davidson shooting.csv)' datatype='real' name='[Duration ICT (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (davidson shooting.csv)' datatype='integer' name='[F1 (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (peak time.csv)' datatype='integer' name='[F1 (peak_time.csv)]' role='measure' type='quantitative' />
      <column caption='Full Location  (davidson shooting.csv)' datatype='string' name='[Full Location  (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Full Location' datatype='string' name='[Full Location ]' role='dimension' type='nominal' />
      <column caption='Inc MM (davidson shooting.csv)' datatype='real' name='[Inc MM (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Incident ID (davidson shooting.csv)' datatype='integer' name='[Incident ID (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Incident ID]' role='dimension' type='ordinal' />
      <column caption='Incident Type (davidson shooting.csv)' datatype='string' name='[Incident Type (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
      <column caption='Interstate (davidson shooting.csv)' datatype='string' name='[Interstate (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Key  (davidson shooting.csv)' datatype='integer' name='[Key  (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column caption='Key' datatype='integer' name='[Key ]' role='dimension' type='ordinal' />
      <column caption='Lanes Blocked (davidson shooting.csv)' datatype='integer' name='[Lanes Blocked (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude (davidson shooting.csv)' datatype='real' name='[Latitude (davidson_shooting.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude (davidson shooting.csv)' datatype='real' name='[Longitude (davidson_shooting.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Prec (davidson shooting.csv)' datatype='real' name='[Prec (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Region (davidson shooting.csv)' datatype='integer' name='[Region (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Response Time (davidson shooting.csv)' datatype='real' name='[Response Time (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Route (davidson shooting.csv)' datatype='string' name='[Route (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Rural/ Urban (davidson shooting.csv)' datatype='string' name='[Rural/_Urban (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Rural/ Urban' datatype='string' name='[Rural/_Urban]' role='dimension' type='nominal' />
      <column caption='Severity (davidson shooting.csv)' datatype='string' name='[Severity (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Severity Duration (davidson shooting.csv)' datatype='string' name='[Severity Duration (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Severity Lanes (davidson shooting.csv)' datatype='string' name='[Severity Lanes (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Start Date (davidson shooting.csv)' datatype='date' name='[Start Date (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Start Date (days.csv)]' role='dimension' type='ordinal' />
      <column caption='Start Time (davidson shooting.csv)' datatype='string' name='[Start Time (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Start Time (peak time.csv)' datatype='string' name='[Start Time (peak_time.csv)]' role='dimension' type='nominal' />
      <column caption='Temp (davidson shooting.csv)' datatype='real' name='[Temp (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Unnamed: 16 (davidson shooting.csv)' datatype='string' name='[Unnamed: 16 (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Daily Weather Formatted.csv' datatype='table' name='[__tableau_internal_object_id__].[Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='MASTER File 2021 Tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='davidson_shooting.csv' datatype='table' name='[__tableau_internal_object_id__].[davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='days.csv' datatype='table' name='[__tableau_internal_object_id__].[days.csv_AF74184E6F394FA48D81D944A318A375]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='peak_time.csv' datatype='table' name='[__tableau_internal_object_id__].[peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF]' role='measure' type='quantitative' />
      <column caption='Cloudcover (Davidson Shooting.Csv)' datatype='real' name='[cloudcover (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Cloudcover' datatype='real' name='[cloudcover]' role='measure' type='quantitative' />
      <column caption='Conditions (Davidson Shooting.Csv)' datatype='string' name='[conditions (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Conditions' datatype='string' name='[conditions]' role='dimension' type='nominal' />
      <column caption='Datetime (Davidson Shooting.Csv)' datatype='date' name='[datetime (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
      <column caption='Description (Davidson Shooting.Csv)' datatype='string' name='[description (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Description1' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Dew (Davidson Shooting.Csv)' datatype='real' name='[dew (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Dew' datatype='real' name='[dew]' role='measure' type='quantitative' />
      <column caption='Feelslike (Davidson Shooting.Csv)' datatype='real' name='[feelslike (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Feelslike' datatype='real' name='[feelslike]' role='measure' type='quantitative' />
      <column caption='Feelslikemax (Davidson Shooting.Csv)' datatype='real' name='[feelslikemax (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Feelslikemax' datatype='real' name='[feelslikemax]' role='measure' type='quantitative' />
      <column caption='Feelslikemin (Davidson Shooting.Csv)' datatype='real' name='[feelslikemin (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Feelslikemin' datatype='real' name='[feelslikemin]' role='measure' type='quantitative' />
      <column caption='Geometry (Davidson Shooting.Csv)' datatype='string' name='[geometry (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Geometry' datatype='string' name='[geometry]' role='dimension' type='nominal' />
      <column caption='Humidity (Davidson Shooting.Csv)' datatype='real' name='[humidity (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Humidity' datatype='real' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Icon (Davidson Shooting.Csv)' datatype='string' name='[icon (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Icon' datatype='string' name='[icon]' role='dimension' type='nominal' />
      <column caption='Moonphase (Davidson Shooting.Csv)' datatype='real' name='[moonphase (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Moonphase' datatype='real' name='[moonphase]' role='measure' type='quantitative' />
      <column caption='Name (Davidson Shooting.Csv)' datatype='string' name='[name (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Precip (Davidson Shooting.Csv)' datatype='real' name='[precip (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Precip' datatype='real' name='[precip]' role='measure' type='quantitative' />
      <column caption='Precipcover (Davidson Shooting.Csv)' datatype='real' name='[precipcover (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Precipcover' datatype='real' name='[precipcover]' role='measure' type='quantitative' />
      <column caption='Sealevelpressure (Davidson Shooting.Csv)' datatype='real' name='[sealevelpressure (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Sealevelpressure' datatype='real' name='[sealevelpressure]' role='measure' type='quantitative' />
      <column caption='Snow (Davidson Shooting.Csv)' datatype='real' name='[snow (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Snow' datatype='real' name='[snow]' role='measure' type='quantitative' />
      <column caption='Snowdepth (Davidson Shooting.Csv)' datatype='real' name='[snowdepth (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Snowdepth' datatype='real' name='[snowdepth]' role='measure' type='quantitative' />
      <column caption='Stations (Davidson Shooting.Csv)' datatype='string' name='[stations (davidson_shooting.csv)]' role='dimension' type='nominal' />
      <column caption='Stations' datatype='string' name='[stations]' role='dimension' type='nominal' />
      <column caption='Sunrise (Davidson Shooting.Csv)' datatype='datetime' name='[sunrise (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column caption='Sunrise' datatype='datetime' name='[sunrise]' role='dimension' type='ordinal' />
      <column caption='Sunset (Davidson Shooting.Csv)' datatype='datetime' name='[sunset (davidson_shooting.csv)]' role='dimension' type='ordinal' />
      <column caption='Sunset' datatype='datetime' name='[sunset]' role='dimension' type='ordinal' />
      <column caption='Temp (Davidson Shooting.Csv)' datatype='real' name='[temp (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Temp1' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Tempmax (Davidson Shooting.Csv)' datatype='real' name='[tempmax (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Tempmax' datatype='real' name='[tempmax]' role='measure' type='quantitative' />
      <column caption='Tempmin (Davidson Shooting.Csv)' datatype='real' name='[tempmin (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Tempmin' datatype='real' name='[tempmin]' role='measure' type='quantitative' />
      <column caption='Visibility (Davidson Shooting.Csv)' datatype='real' name='[visibility (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Visibility' datatype='real' name='[visibility]' role='measure' type='quantitative' />
      <column caption='Winddir (Davidson Shooting.Csv)' datatype='real' name='[winddir (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Winddir' datatype='real' name='[winddir]' role='measure' type='quantitative' />
      <column caption='Windgust (Davidson Shooting.Csv)' datatype='real' name='[windgust (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Windgust' datatype='real' name='[windgust]' role='measure' type='quantitative' />
      <column caption='Windspeed (Davidson Shooting.Csv)' datatype='real' name='[windspeed (davidson_shooting.csv)]' role='measure' type='quantitative' />
      <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
      <column-instance column='[Start Date (days.csv)]' derivation='Month' name='[mn:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Start Date (days.csv):ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2021</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;MAURY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BEDFORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GILES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SMITH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MONTGOMERY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HICKMAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHEATHAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HUMPHREYS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUMNER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WILLIAMSON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ROBERTSON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MARSHALL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DAVIDSON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WILSON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RUTHERFORD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DICKSON&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Incident Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abandoned Vehicle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack-Knife Tractor Trailer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Interstate Shooting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Single Vehicle Crash&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oversize Load&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Debris on Roadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wrong Way Driver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MultiVehicle Crash&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Special Event&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vehicle Fire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Overturned Vehicle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Off Ramp Backup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Disabled Vehicle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weather&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PD/Med/Fire Activity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flooding&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:datetime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Daily Weather Formatted.csv' id='Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9'>
            <properties context=''>
              <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='Daily Weather Formatted.csv' table='[Daily Weather Formatted#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='date' name='datetime' ordinal='1' />
                  <column datatype='real' name='tempmax' ordinal='2' />
                  <column datatype='real' name='tempmin' ordinal='3' />
                  <column datatype='real' name='temp' ordinal='4' />
                  <column datatype='real' name='feelslikemax' ordinal='5' />
                  <column datatype='real' name='feelslikemin' ordinal='6' />
                  <column datatype='real' name='feelslike' ordinal='7' />
                  <column datatype='real' name='dew' ordinal='8' />
                  <column datatype='real' name='humidity' ordinal='9' />
                  <column datatype='real' name='precip' ordinal='10' />
                  <column datatype='real' name='precipcover' ordinal='11' />
                  <column datatype='real' name='snow' ordinal='12' />
                  <column datatype='real' name='snowdepth' ordinal='13' />
                  <column datatype='real' name='windgust' ordinal='14' />
                  <column datatype='real' name='windspeed' ordinal='15' />
                  <column datatype='real' name='winddir' ordinal='16' />
                  <column datatype='real' name='sealevelpressure' ordinal='17' />
                  <column datatype='real' name='cloudcover' ordinal='18' />
                  <column datatype='real' name='visibility' ordinal='19' />
                  <column datatype='datetime' name='sunrise' ordinal='20' />
                  <column datatype='datetime' name='sunset' ordinal='21' />
                  <column datatype='real' name='moonphase' ordinal='22' />
                  <column datatype='string' name='conditions' ordinal='23' />
                  <column datatype='string' name='description' ordinal='24' />
                  <column datatype='string' name='icon' ordinal='25' />
                  <column datatype='string' name='stations' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='MASTER File 2021 Tableau.csv' id='MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A'>
            <properties context=''>
              <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='MASTER File 2021 Tableau.csv' table='[MASTER File 2021 Tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Region' ordinal='1' />
                  <column datatype='integer' name='Incident ID' ordinal='2' />
                  <column datatype='string' name='Incident Type' ordinal='3' />
                  <column datatype='string' name='Full Location ' ordinal='4' />
                  <column datatype='date' name='Start Date' ordinal='5' />
                  <column datatype='string' name='Start Time' ordinal='6' />
                  <column datatype='real' name='Duration ICT' ordinal='7' />
                  <column datatype='integer' name='Lanes Blocked' ordinal='8' />
                  <column datatype='real' name='Blockage Duration RCT' ordinal='9' />
                  <column datatype='real' name='Response Time' ordinal='10' />
                  <column datatype='string' name='Rural/_Urban' ordinal='11' />
                  <column datatype='integer' name='Key ' ordinal='12' />
                  <column datatype='string' name='County' ordinal='13' />
                  <column datatype='string' name='Interstate' ordinal='14' />
                  <column datatype='string' name='Route' ordinal='15' />
                  <column datatype='string' name='Direction' ordinal='16' />
                  <column datatype='string' name='Unnamed: 16' ordinal='17' />
                  <column datatype='string' name='Description' ordinal='18' />
                  <column datatype='real' name='Inc MM' ordinal='19' />
                  <column datatype='real' name='Latitude' ordinal='20' />
                  <column datatype='real' name='Longitude' ordinal='21' />
                  <column datatype='string' name='Severity Lanes' ordinal='22' />
                  <column datatype='string' name='Severity Duration' ordinal='23' />
                  <column datatype='string' name='Severity' ordinal='24' />
                  <column datatype='real' name='Temp' ordinal='25' />
                  <column datatype='real' name='Prec' ordinal='26' />
                  <column datatype='string' name='Condition' ordinal='27' />
                  <column datatype='string' name='name' ordinal='28' />
                  <column datatype='date' name='datetime' ordinal='29' />
                  <column datatype='real' name='tempmax' ordinal='30' />
                  <column datatype='real' name='tempmin' ordinal='31' />
                  <column datatype='real' name='temp' ordinal='32' />
                  <column datatype='real' name='feelslikemax' ordinal='33' />
                  <column datatype='real' name='feelslikemin' ordinal='34' />
                  <column datatype='real' name='feelslike' ordinal='35' />
                  <column datatype='real' name='dew' ordinal='36' />
                  <column datatype='real' name='humidity' ordinal='37' />
                  <column datatype='real' name='precip' ordinal='38' />
                  <column datatype='real' name='precipcover' ordinal='39' />
                  <column datatype='real' name='snow' ordinal='40' />
                  <column datatype='real' name='snowdepth' ordinal='41' />
                  <column datatype='real' name='windgust' ordinal='42' />
                  <column datatype='real' name='windspeed' ordinal='43' />
                  <column datatype='real' name='winddir' ordinal='44' />
                  <column datatype='real' name='sealevelpressure' ordinal='45' />
                  <column datatype='real' name='cloudcover' ordinal='46' />
                  <column datatype='real' name='visibility' ordinal='47' />
                  <column datatype='datetime' name='sunrise' ordinal='48' />
                  <column datatype='datetime' name='sunset' ordinal='49' />
                  <column datatype='real' name='moonphase' ordinal='50' />
                  <column datatype='string' name='conditions' ordinal='51' />
                  <column datatype='string' name='description' ordinal='52' />
                  <column datatype='string' name='icon' ordinal='53' />
                  <column datatype='string' name='stations' ordinal='54' />
                  <column datatype='string' name='geometry' ordinal='55' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='davidson_shooting.csv' id='davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B'>
            <properties context=''>
              <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='davidson_shooting.csv' table='[davidson_shooting#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Region' ordinal='1' />
                  <column datatype='integer' name='Incident ID' ordinal='2' />
                  <column datatype='string' name='Incident Type' ordinal='3' />
                  <column datatype='string' name='Full Location ' ordinal='4' />
                  <column datatype='date' name='Start Date' ordinal='5' />
                  <column datatype='string' name='Start Time' ordinal='6' />
                  <column datatype='real' name='Duration ICT' ordinal='7' />
                  <column datatype='integer' name='Lanes Blocked' ordinal='8' />
                  <column datatype='real' name='Blockage Duration RCT' ordinal='9' />
                  <column datatype='real' name='Response Time' ordinal='10' />
                  <column datatype='string' name='Rural/_Urban' ordinal='11' />
                  <column datatype='integer' name='Key ' ordinal='12' />
                  <column datatype='string' name='County' ordinal='13' />
                  <column datatype='string' name='Interstate' ordinal='14' />
                  <column datatype='string' name='Route' ordinal='15' />
                  <column datatype='string' name='Direction' ordinal='16' />
                  <column datatype='string' name='Unnamed: 16' ordinal='17' />
                  <column datatype='string' name='Description' ordinal='18' />
                  <column datatype='real' name='Inc MM' ordinal='19' />
                  <column datatype='real' name='Latitude' ordinal='20' />
                  <column datatype='real' name='Longitude' ordinal='21' />
                  <column datatype='string' name='Severity Lanes' ordinal='22' />
                  <column datatype='string' name='Severity Duration' ordinal='23' />
                  <column datatype='string' name='Severity' ordinal='24' />
                  <column datatype='real' name='Temp' ordinal='25' />
                  <column datatype='real' name='Prec' ordinal='26' />
                  <column datatype='string' name='Condition' ordinal='27' />
                  <column datatype='string' name='name' ordinal='28' />
                  <column datatype='date' name='datetime' ordinal='29' />
                  <column datatype='real' name='tempmax' ordinal='30' />
                  <column datatype='real' name='tempmin' ordinal='31' />
                  <column datatype='real' name='temp' ordinal='32' />
                  <column datatype='real' name='feelslikemax' ordinal='33' />
                  <column datatype='real' name='feelslikemin' ordinal='34' />
                  <column datatype='real' name='feelslike' ordinal='35' />
                  <column datatype='real' name='dew' ordinal='36' />
                  <column datatype='real' name='humidity' ordinal='37' />
                  <column datatype='real' name='precip' ordinal='38' />
                  <column datatype='real' name='precipcover' ordinal='39' />
                  <column datatype='real' name='snow' ordinal='40' />
                  <column datatype='real' name='snowdepth' ordinal='41' />
                  <column datatype='real' name='windgust' ordinal='42' />
                  <column datatype='real' name='windspeed' ordinal='43' />
                  <column datatype='real' name='winddir' ordinal='44' />
                  <column datatype='real' name='sealevelpressure' ordinal='45' />
                  <column datatype='real' name='cloudcover' ordinal='46' />
                  <column datatype='real' name='visibility' ordinal='47' />
                  <column datatype='datetime' name='sunrise' ordinal='48' />
                  <column datatype='datetime' name='sunset' ordinal='49' />
                  <column datatype='real' name='moonphase' ordinal='50' />
                  <column datatype='string' name='conditions' ordinal='51' />
                  <column datatype='string' name='description' ordinal='52' />
                  <column datatype='string' name='icon' ordinal='53' />
                  <column datatype='string' name='stations' ordinal='54' />
                  <column datatype='string' name='geometry' ordinal='55' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='days.csv' id='days.csv_AF74184E6F394FA48D81D944A318A375'>
            <properties context=''>
              <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='days.csv' table='[days#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='integer' name='Count' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='peak_time.csv' id='peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF'>
            <properties context=''>
              <relation connection='textscan.1ej9yr0122hsrg11qmmg41a3spos' name='peak_time.csv' table='[peak_time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Start Time' ordinal='1' />
                  <column datatype='integer' name='Count' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[datetime]' />
              <expression op='[datetime (Daily Weather Formatted.csv)]' />
            </expression>
            <first-end-point object-id='MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A' />
            <second-end-point object-id='Daily Weather Formatted.csv_0C0B5FA22B234FB9A0581A368F1499A9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Incident Type]' />
              <expression op='[Incident Type (davidson_shooting.csv)]' />
            </expression>
            <first-end-point object-id='MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A' />
            <second-end-point object-id='davidson_shooting.csv_BFA23708DC3C45FF9E8D1400C56EBB3B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Start Date]' />
              <expression op='[Start Date (days.csv)]' />
            </expression>
            <first-end-point object-id='MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A' />
            <second-end-point object-id='days.csv_AF74184E6F394FA48D81D944A318A375' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Start Time]' />
              <expression op='[Start Time (peak_time.csv)]' />
            </expression>
            <first-end-point object-id='MASTER File 2021 Tableau.csv_53DD6657D1BB4BD69B15C644D8A4284A' />
            <second-end-point object-id='peak_time.csv_BE59628EA5E946FA9FB82982C9B7BFDF' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E7208C11ABEF4F1083DE583B89E06130]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Geometry Map' />
      <command command='tsc:brush'>
        <param name='field-captions' value='County' />
        <param name='target' value='Geometry Map' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_255142AF473F4EE09BE607C746C75EC5]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Days' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Severity' />
        <param name='target' value='Days' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='real' name='[Blockage Duration RCT]' role='measure' type='quantitative' />
            <column datatype='string' name='[Interstate]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Blockage Duration RCT]' derivation='Avg' name='[avg:Blockage Duration RCT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Geometry' datatype='string' name='[geometry]' role='dimension' type='nominal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Interstate]' derivation='None' name='[none:Interstate:nk]' pivot='key' type='nominal' />
            <column-instance column='[geometry]' derivation='None' name='[none:geometry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Blockage Duration RCT:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>123.0</max>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]'>
            <groupfilter function='level-members' level='[mn:datetime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]'>
            <groupfilter function='level-members' level='[none:geometry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Blockage Duration RCT:qk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Longitude:qk]' field-type='quantitative' max='-9630636.0911407862' min='-9676359.6262873225' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Latitude:qk]' field-type='quantitative' max='4329170.5262672016' min='4302988.5838152049' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Blockage Duration RCT:qk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Latitude:qk]</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{7933FF45-DE60-4A4E-BAA6-D7B7CCCC52B1}' />
    </worksheet>
    <worksheet name='Avg prec inc type'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column-instance column='[precip (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:precip (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:temp (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident Type]' derivation='Count' name='[cnt:Incident Type:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[conditions (Daily Weather Formatted.csv)]' role='dimension' type='nominal' />
            <column datatype='date' name='[datetime (Daily Weather Formatted.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[conditions (Daily Weather Formatted.csv)]' derivation='None' name='[none:conditions (Daily Weather Formatted.csv):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[precip (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[temp (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column-instance column='[datetime (Daily Weather Formatted.csv)]' derivation='Month-Trunc' name='[tmn:datetime (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Interstate Shooting&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Jack-Knife Tractor Trailer&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Overturned Vehicle&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Single Vehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Vehicle Fire&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Wrong Way Driver&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:conditions (Daily Weather Formatted.csv):nk]' member='&quot;Rain&quot;' />
              <groupfilter function='member' level='[none:conditions (Daily Weather Formatted.csv):nk]' member='&quot;Snow&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' scope='rows' value='Average Percipitation' />
            <format attr='title' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[tmn:datetime (Daily Weather Formatted.csv):qk]' scope='cols' value='Month of Incident' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' palette='tableau-map-temperatur' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk] * [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk])</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[tmn:datetime (Daily Weather Formatted.csv):qk]</cols>
      </table>
      <simple-id uuid='{690B446A-8AD5-48B6-B536-2120B6B00FBF}' />
    </worksheet>
    <worksheet name='Avg prec temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column-instance column='[precip (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:precip (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:temp (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident Type]' derivation='Count' name='[cnt:Incident Type:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[conditions (Daily Weather Formatted.csv)]' role='dimension' type='nominal' />
            <column datatype='date' name='[datetime (Daily Weather Formatted.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[conditions (Daily Weather Formatted.csv)]' derivation='None' name='[none:conditions (Daily Weather Formatted.csv):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[precip (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[temp (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column-instance column='[datetime (Daily Weather Formatted.csv)]' derivation='Month-Trunc' name='[tmn:datetime (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Weather&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
              <path column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk] * ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk] + [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]))</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[tmn:datetime (Daily Weather Formatted.csv):qk]</cols>
      </table>
      <simple-id uuid='{9AF4DB00-EDBB-46B4-A35B-F5B9145F07C8}' />
    </worksheet>
    <worksheet name='Avg prec temp (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column-instance column='[precip (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:precip (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:temp (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident Type]' derivation='Count' name='[cnt:Incident Type:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[conditions (Daily Weather Formatted.csv)]' role='dimension' type='nominal' />
            <column datatype='date' name='[datetime (Daily Weather Formatted.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[conditions (Daily Weather Formatted.csv)]' derivation='None' name='[none:conditions (Daily Weather Formatted.csv):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[precip (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[temp (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column-instance column='[datetime (Daily Weather Formatted.csv)]' derivation='Month-Trunc' name='[tmn:datetime (Daily Weather Formatted.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk] + [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk])</rows>
        <cols>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk] / [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[tmn:datetime (Daily Weather Formatted.csv):ok])</cols>
      </table>
      <simple-id uuid='{B08A55DF-7311-44AC-A54C-3B0A4E6BF207}' />
    </worksheet>
    <worksheet name='Daily Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column-instance column='[precip (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:precip (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:temp (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[conditions (Daily Weather Formatted.csv)]' role='dimension' type='nominal' />
            <column datatype='date' name='[datetime (Daily Weather Formatted.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[datetime (Daily Weather Formatted.csv)]' derivation='Month' name='[mn:datetime (Daily Weather Formatted.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[conditions (Daily Weather Formatted.csv)]' derivation='None' name='[none:conditions (Daily Weather Formatted.csv):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[precip (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column datatype='real' name='[temp (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
            <column-instance column='[datetime (Daily Weather Formatted.csv)]' derivation='Year' name='[yr:datetime (Daily Weather Formatted.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime (Daily Weather Formatted.csv):ok]' value='66' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' />
              <size column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (Daily Weather Formatted.csv):ok]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime (Daily Weather Formatted.csv):ok]</cols>
      </table>
      <simple-id uuid='{9B512328-6DE8-429B-879F-01950731465D}' />
    </worksheet>
    <worksheet name='Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Interstate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Severity]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date (days.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Interstate]' derivation='Attribute' name='[attr:Interstate:nk]' pivot='key' type='nominal' />
            <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Month' name='[mn:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Severity]' derivation='None' name='[none:Severity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Quarter' name='[qr:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Interstate Shooting&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Jack-Knife Tractor Trailer&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Single Vehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Vehicle Fire&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Wrong Way Driver&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 2&quot;' />
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Condition:nk]' value='271' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' value='136' />
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date (days.csv):ok]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <size column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[attr:Interstate:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[qr:Start Date (days.csv):ok] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date (days.csv):ok] / [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]))</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Condition:nk]</cols>
      </table>
      <simple-id uuid='{AFD5229B-5B0D-4C95-991C-7B0FD48B8416}' />
    </worksheet>
    <worksheet name='Days (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Interstate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Severity]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date (days.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Interstate]' derivation='Attribute' name='[attr:Interstate:nk]' pivot='key' type='nominal' />
            <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Month' name='[mn:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Severity]' derivation='None' name='[none:Severity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Quarter' name='[qr:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Interstate Shooting&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Jack-Knife Tractor Trailer&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Single Vehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Vehicle Fire&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Wrong Way Driver&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 1&quot;' />
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 2&quot;' />
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[attr:Interstate:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Condition:nk] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk] / [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]))</rows>
        <cols>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[qr:Start Date (days.csv):ok] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date (days.csv):ok] / [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]))</cols>
      </table>
      <simple-id uuid='{E0E0F52F-E354-4FE3-A721-81F68A788C06}' />
    </worksheet>
    <worksheet name='Days (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Interstate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Severity]' role='dimension' type='nominal' />
            <column datatype='date' name='[Start Date (days.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Interstate]' derivation='Attribute' name='[attr:Interstate:nk]' pivot='key' type='nominal' />
            <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Month' name='[mn:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Severity]' derivation='None' name='[none:Severity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Date (days.csv)]' derivation='Quarter' name='[qr:Start Date (days.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Interstate Shooting&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Jack-Knife Tractor Trailer&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;MultiVehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Single Vehicle Crash&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Vehicle Fire&quot;' />
              <groupfilter function='member' level='[none:Incident Type:nk]' member='&quot;Wrong Way Driver&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 1&quot;' />
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 2&quot;' />
              <groupfilter function='member' level='[none:Severity:nk]' member='&quot;Level 3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[attr:Interstate:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]</rows>
        <cols>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Condition:nk] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[qr:Start Date (days.csv):ok] / ([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date (days.csv):ok] / [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok])))))</cols>
      </table>
      <simple-id uuid='{E05121AE-938A-4627-AFFC-83CF822B79A0}' />
    </worksheet>
    <worksheet name='Geometry Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Interstate]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident Type]' derivation='Count' name='[cnt:Incident Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[geometry]' derivation='Count' name='[cnt:geometry:qk]' pivot='key' type='quantitative' />
            <column caption='Geometry' datatype='string' name='[geometry]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Interstate]' derivation='None' name='[none:Interstate:nk]' pivot='key' type='nominal' />
            <column-instance column='[geometry]' derivation='None' name='[none:geometry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' included-values='in-range'>
            <min>1</min>
            <max>38</max>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]'>
            <groupfilter from='&quot;BEDFORD&quot;' function='range' level='[none:County:nk]' to='&quot;WILSON&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]'>
            <groupfilter function='level-members' level='[none:geometry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Longitude:qk]' field-type='quantitative' max='-9513377.8394711986' min='-9807457.2635186613' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Latitude:qk]' field-type='quantitative' max='4387522.1867865166' min='4220924.0872598002' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Longitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Latitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]' value='false' />
            <format attr='in-tooltip' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:geometry:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]' />
              <size column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:geometry:qk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]' />
              <lod column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Latitude:qk]</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{B43917E4-FACD-4BC8-8E6E-CE479CB1BEFD}' />
    </worksheet>
    <worksheet name='Incident Types'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column-instance column='[Incident Type]' derivation='Count' name='[cnt:Incident Type:qk]' pivot='key' type='quantitative' />
            <column caption='Conditions' datatype='string' name='[conditions]' role='dimension' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[conditions]' derivation='None' name='[none:conditions:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions:nk]'>
            <groupfilter from='&quot;Clear&quot;' function='range' level='[none:conditions:nk]' to='&quot;Snow&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Incident Type:qk]</cols>
      </table>
      <simple-id uuid='{FCD55993-DFCA-48C6-9E63-D1B6AF97446C}' />
    </worksheet>
    <worksheet name='Shooting'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column caption='Full Location  (davidson shooting.csv)' datatype='string' name='[Full Location  (davidson_shooting.csv)]' role='dimension' type='nominal' />
            <column caption='Incident Type (davidson shooting.csv)' datatype='string' name='[Incident Type (davidson_shooting.csv)]' role='dimension' type='nominal' />
            <column caption='Interstate (davidson shooting.csv)' datatype='string' name='[Interstate (davidson_shooting.csv)]' role='dimension' type='nominal' />
            <column caption='Key' datatype='integer' name='[Key ]' role='dimension' type='ordinal' />
            <column-instance column='[Full Location  (davidson_shooting.csv)]' derivation='Count' name='[cnt:Full Location  (davidson_shooting.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Key ]' derivation='Count' name='[cnt:Key :qk]' pivot='key' type='quantitative' />
            <column caption='Conditions' datatype='string' name='[conditions]' role='dimension' type='nominal' />
            <column caption='Datetime (Davidson Shooting.Csv)' datatype='date' name='[datetime (davidson_shooting.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Full Location  (davidson_shooting.csv)]' derivation='None' name='[none:Full Location  (davidson_shooting.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type (davidson_shooting.csv)]' derivation='None' name='[none:Incident Type (davidson_shooting.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Interstate (davidson_shooting.csv)]' derivation='None' name='[none:Interstate (davidson_shooting.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[conditions]' derivation='None' name='[none:conditions:nk]' pivot='key' type='nominal' />
            <column-instance column='[datetime (davidson_shooting.csv)]' derivation='Year' name='[yr:datetime (davidson_shooting.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Full Location  (davidson_shooting.csv):qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type (davidson_shooting.csv):nk]'>
            <groupfilter function='member' level='[none:Incident Type (davidson_shooting.csv):nk]' member='&quot;Interstate Shooting&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (davidson_shooting.csv):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:datetime (davidson_shooting.csv):ok]' member='2020' />
              <groupfilter function='member' level='[yr:datetime (davidson_shooting.csv):ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type (davidson_shooting.csv):nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (davidson_shooting.csv):ok]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Full Location  (davidson_shooting.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (davidson_shooting.csv):ok]' value='341' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Full Location  (davidson_shooting.csv):nk]' value='348' />
            <format attr='width' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Full Location  (davidson_shooting.csv):qk]' value='348' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate (davidson_shooting.csv):nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate (davidson_shooting.csv):nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Full Location  (davidson_shooting.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions:nk] * [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Key :qk])</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (davidson_shooting.csv):ok]</cols>
      </table>
      <simple-id uuid='{88FD0391-21B3-4B92-ADC6-5291486D7F56}' />
    </worksheet>
    <worksheet name='Slider Time Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column caption='Count (peak time.csv)' datatype='integer' name='[Count (peak_time.csv)]' role='measure' type='quantitative' />
            <column caption='F1 (peak time.csv)' datatype='integer' name='[F1 (peak_time.csv)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column caption='Start Time (peak time.csv)' datatype='string' name='[Start Time (peak_time.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Start Time]' role='dimension' type='nominal' />
            <column-instance column='[F1 (peak_time.csv)]' derivation='Count' name='[cnt:F1 (peak_time.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Month' name='[mn:Start Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Start Time (peak_time.csv)]' derivation='None' name='[none:Start Time (peak_time.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Time]' derivation='None' name='[none:Start Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count (peak_time.csv)]' derivation='Sum' name='[sum:Count (peak_time.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:F1 (peak_time.csv):qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date:ok]'>
            <groupfilter function='level-members' level='[mn:Start Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Start Time (peak_time.csv):nk]'>
            <groupfilter from='&quot;1:00:00 PM&quot;' function='range' level='[none:Start Time (peak_time.csv):nk]' to='&quot;9:59:59 AM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count (peak_time.csv):qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Start Time:nk]' member-value='&quot;1:00:00 PM&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date:ok]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Start Time (peak_time.csv):nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:F1 (peak_time.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count (peak_time.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Start Time (peak_time.csv):nk]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:F1 (peak_time.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Start Time:nk]</rows>
        <cols>([federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:Start Date:ok] * [federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count (peak_time.csv):qk])</cols>
      </table>
      <simple-id uuid='{96CD1DB7-4331-47AB-9F7B-EE84C9DC277E}' />
    </worksheet>
    <worksheet name='peak_time'>
      <table>
        <view>
          <datasources>
            <datasource caption='MASTER File 2021 Tableau' name='federated.0kwqwlv00w8lyo11wwa1g06ixjx1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwqwlv00w8lyo11wwa1g06ixjx1'>
            <column caption='Count (peak time.csv)' datatype='integer' name='[Count (peak_time.csv)]' role='measure' type='quantitative' />
            <column-instance column='[temp (Daily Weather Formatted.csv)]' derivation='Avg' name='[avg:temp (Daily Weather Formatted.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count (peak_time.csv)]' derivation='Count' name='[cnt:Count (peak_time.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Count' name='[cnt:datetime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[conditions (Daily Weather Formatted.csv)]' role='dimension' type='nominal' />
            <column caption='Datetime' datatype='date' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[conditions (Daily Weather Formatted.csv)]' derivation='None' name='[none:conditions (Daily Weather Formatted.csv):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[temp (Daily Weather Formatted.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' included-values='in-range'>
            <min>39.071428571428569</min>
            <max>79.0</max>
          </filter>
          <filter class='categorical' column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:conditions (Daily Weather Formatted.csv):nk]' member='&quot;Rain&quot;' />
              <groupfilter function='member' level='[none:conditions (Daily Weather Formatted.csv):nk]' member='&quot;Snow&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]</column>
            <column>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Count (peak_time.csv):qk]' field-type='quantitative' major-origin='500' major-spacing='200' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Count (peak_time.csv):qk]' scope='rows' value='Count of Incidents' />
            <format attr='title' class='0' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Count (peak_time.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' />
              <size column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' />
              <path column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' />
              <text column='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:datetime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[cnt:Count (peak_time.csv):qk]</rows>
        <cols>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:qk]</cols>
      </table>
      <simple-id uuid='{D032C4B3-1C34-425E-B17E-EE369475923D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='81900' x='800' y='1000'>
              <zone h='98000' id='3' name='Avg prec inc type' w='81900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='165' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16500' x='82700' y='1000'>
              <zone fixed-size='232' h='30000' id='8' is-fixed='true' name='Avg prec inc type' pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type-v2='color' w='16500' x='82700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Avg prec inc type' w='81900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='30000' id='8' name='Avg prec inc type' pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type-v2='color' w='16500' x='82700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6D231838-28EC-41E6-9EEB-199E631412DF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Incident Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4462739A-82F4-4D36-8954-07097CC364AE}' />
    </window>
    <window class='worksheet' name='Shooting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime (davidson_shooting.csv):ok]' type='filter' />
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type (davidson_shooting.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate (davidson_shooting.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident ID:ok]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate (davidson_shooting.csv):nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Key :ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50616D4D-0AEA-4EEA-BFBD-1B3789105330}' />
    </window>
    <window class='worksheet' name='Geometry Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:County:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[attr:Incident Type:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident ID:ok]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Key :ok]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1443832D-9201-4016-91D7-30DD4B016D72}' />
    </window>
    <window class='worksheet' name='Days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{207E4CA0-6191-4DD6-A466-D9DC44F0123E}' />
    </window>
    <window class='worksheet' name='Days (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[sum:Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2DF56008-2473-4DF4-8B20-BEBA1546E175}' />
    </window>
    <window class='worksheet' name='Days (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7108DA14-2ABE-4FAA-9458-70E88BC0AA28}' />
    </window>
    <window class='worksheet' name='Slider Time Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{46B2B9A9-E886-45DE-A885-FAF563869540}' />
    </window>
    <window class='worksheet' name='Daily Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:precip (Daily Weather Formatted.csv):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B3D3BB05-2529-4877-BDB1-8196460A7EB9}' />
    </window>
    <window class='worksheet' name='Avg prec temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E48E595-15C9-4507-BA48-6A237966EA5C}' />
    </window>
    <window class='worksheet' name='Avg prec temp (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2B75E08F-2DA5-467F-8346-E034F7C22F0A}' />
    </window>
    <window class='worksheet' name='Avg prec inc type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='148'>
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{25EEB75F-A04F-452C-9328-D29E7A33EF69}' />
    </window>
    <window class='worksheet' maximized='true' name='peak_time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:temp (Daily Weather Formatted.csv):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:conditions (Daily Weather Formatted.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF22E0F2-26DA-4BE0-98F9-6F23C4D4E033}' />
    </window>
    <window class='worksheet' name='Avg Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]' type='filter' />
            <card param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Blockage Duration RCT:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[avg:Blockage Duration RCT:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[mn:datetime:ok]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:F1 (crashes.csv):nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident ID:ok]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Incident Type:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Interstate:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:Severity:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[none:geometry:nk]</field>
            <field>[federated.0kwqwlv00w8lyo11wwa1g06ixjx1].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{21729904-61FE-4D62-B215-3EB90E58155A}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg prec inc type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C003C011-C528-4766-86FB-878543BDF3F8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Duration' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg prec inc type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d93NcWXbfP/eFzt1ANzIB5jCR5AROWmvjrNYKK5dLKpddrnKosv4e/27/
      IpXKsqyStrzSypod7c6GyUMuOcwBAIkcG+icXrrXPzTAMARIkATQDfb9VHXhAWi8e17jft89
      95z7zhVKKYVG06EYrTZAo2kle1YAjuO02gTNc8CeFUCtVmu1CZrngD0rAI1mO9AC0HQ0WgCa
      jkYLQNPRaAFoOhpr/cBxnD0VWalUKq02QfMccFcA4XCYcDjcSluemHQ63WoTNHsc7QJpOhot
      AE1HszcEoBS3rlzg4tVRZKtt0TwTDa/OV1Oft9qMu1iPf0s7oMgXS9hRQcNXhAgIggDP81pt
      mOYJ8f2AseVbnBp8HctoffdrvQVbQtCT7qZQrtHwFLGohWma2LbdasM0T0hAQG55lv/1t3/D
      n/z4zxi78AWHTn+L/X0pGqUsH316hR/+6Ft8/quPefM775OKmDtqz95wgYTg+Cuv8da73yIT
      3RsmazanvFQk/lIXIjdFePAwo1cvAfDJp2d57703uX3hdxx57TQXL17ecVt0b9LsOtHuBF98
      9AFfTudZmb5NYDbD716jzJe//kfOTzqkU3HELsz4tAA0u46UEh+TWKqK9BzSmR5mFxd57bWT
      uGY3f/CDV/nlP/0Lh46e2HFbxF59JDKfz+tE2B6k4TX46/N/gVSS7miaPzv1HzCM1t2H9Qig
      aRmr1RVWaysttUELQNMyDGFwc+laa21oaeuajkYIwZ3V27iB2zIbtAA0LaXu1ZjNT7esfS0A
      TUsxDZMbS9doVSxGC0DTcmaL09Tcakva1gLQtByB4Fb2Rkva1gLQtBwhBKPLN5Fq99f6agFo
      2oJ8LcdKZXnX29UC0LQFpmFyfenqrk+G20AAiivnPuWf//kX5Kq63menIoTg9soYgQp2td02
      EIBPtuDy7rtnSEb0+v5Oxg887qyM72qbbSAAg0zC4LeffEXN9VttjKaFGIbJzeXru9vmrra2
      IZL5xQJJy2O1rF2gTmeuOEPFKe9aey0XgO9J0ukoRUeRTkRabY6mxZiimRneLVougPzSMoYd
      IR6LoVoQB9a0F0IIxrI3dy0a1HIBpDIJAhXj2P5+6nVd5UEDpUaJhdLcrrTVcgGUclkuXfiK
      Ly+PEY2FWm2Opg1oPiewO5Phlgugb+QQmYiBCALK1c3XhSulyOfzu2iZplUIIZjI3cb1dz4o
      0nIBgM177/+AnkySZGzzPEB5ZY7zV27tol2aVuJLn9urO58TaHlhrGpxmRuj8wz2dFGuOmTi
      D1eoVsrn8tVbqEBRdXzCJroy3B7F9338QMIWSp5cX7jKsczOVoZouQCKqyssZxcJxQ5xvDu+
      ybtM3nj7HWbn54nYJqYhdGW4PUpAQN3xiUcf3/VWa1kqXpl0LLNj9rTcBYole3np2DCVSg0v
      2HgdiBCCWDzBieMnMA2xyxZqWslY9uaOnr/lAujuy7A4v0JYVilUWvdwtGZnuPD5R/z0H3/O
      9MQoP/n7v2d8bgVQzF25ycJyjcLcPOd+eYm6+/DNTwjBaPYWUu7cArmWCwAM4jGLiuNw88p1
      dnctoGZnUcxMTZLqHWBo3xAxC1w/AAT7DvfjeZJ8zuWNd4aYn9t4e66qU2GuNLtjFrZcAAuT
      U5jRKMKMc+btU+xsLWDNrqLg7e/9Eb3uNJfnGpx58yQLC8sopfA9H8/zUL5LbqlKaJM5gRBi
      R3MCLRfA0KGDHDn2Kj/83ttYQvv3zxUCaBSopo5zLOlwcXSet04epVGtMTdZoJZdYejYPkqu
      zfDAxuvAhBBM56eoezuzgWPLo0CguPb1WXwFp7/9IzYNBGn2IIKhwy8xdLj53e+/P0LDaxBN
      xOl9/V548+jLiUeexZced1Zv88rgyW23sOUjAMDA8AG+/f6PGE5HW22Kpg0xhMGtpes7skDu
      IQF4tQpfffkpF6+Nsd5co1Km4e3U9FSwOj3KBx9+xEpFPw+g2ZiVapZcbXXbz/uQAJRUJNM9
      GNJjaXqMD37xa7KreQoLc3x1/hy3JrZ7lZ4kt5InGQ5RKDe2+dya54nRHagdtKEL1KgUwQqT
      K5SwpE+hXMF1Ao69eoqw2O5YvcXxV05QbrgMZh7tC2o6l/WH5r1ge5e/PDQJtmNxTp0+gwx8
      Ar+fgZGARDyKIQSGbZMaHt7G5iWf//IDpvMN3v+DH5OMtMGcXNO2VJwK88VZDmYOb9s5HxoB
      hGFgWRahcIRoPElPpptwOIwdCmEKgW1v55p9j4WFIknD5Zcf/oZiXWeCNZtjCIOby9dQbN9k
      uMW33BC//yd/eDc7GAvpEUCzOUIIZgsz1Nwa8dD2xMtbHAYVpLq7mb55mdmFRUo1vbz5eadR
      nCDiF586pOlLnzsrY9tmTxvkAXzGb9zgq8/OUqppF+h5RcmAxYlfMHPt/3Am5GHWs08lAkMY
      3Mre2LZCum0gAJNjL58gnopTqxRbbYxmB/CcMhOX/5Ls9CcIIYgYJq+ZErO2/FQiWKlsX06g
      DZxun1zF4lsnD/ObT89x7OgIDz8Tptmr/Oxv/jt3Js7z8qEk52/lOXPmCINxg/O/u8PYbAFr
      fzf5eoRD75ymJ7W1B5zWN9f7vSPfe2b72mAEsDl+MM31+Qo//OF76LoQzwdKKZYmf0V+7iuU
      kkzNlomGoFh2wLJ557X9vH7qCG93hYl4WZYWK1s+d3NzvfFtyQm0gQB8vvrtJ0yOjiHDSfR6
      0L2P71aYuPQXLE/+mmgsQuA4pPtS+FJRLddZKtSZmS1w8ECGVCJKXxDiYLryRIXRam6N2cKz
      b67XBjvFB1w6+xWjd2b59h/8mMHu2Jb+Su8U334opagWJpi58Xf4Xg3xBMvbPRlw2Qtw4kMI
      sbX78nDXfv7wpT95ona+SRuMAIpcrsg73/4OmYT2/vcqSgZkpz9m8spfEfj1J+6UtmFy2jaJ
      VOe3PBLMFqaf+TmBNhCAQX9fhpmpaWobPBeqaX88t8zUtf/N0uRHz3QeyzA5FbKJblkEilvP
      +NB8Gwgg4PqFCxRyeVYKm6lZ4dar5IvlbUyCa7aDSmGC2xf+B+Xc+GNdF6UUslJF5kqbhj8t
      YXDKtolX5x8b6xfCYOwZN9drAwEY9Az0UKg26N9sNaiClZUsM2O3qOg9NNqCpsvzCZOX/wrf
      rTzW5ZFOA2umSt/0IINLh7Fn66hNCpuZhsGrIZtkdf6xFSFWqyusVlee+jraIA8gOHjkKDPn
      rlFtuKQ2WhEqIBGL4gwMEzcVvh+0bWU4T3rYxvNdsMv3qiyM/YxKbhQe0/FV4GOs1Oku9BCV
      vU2hKOgpH6ZcX6A8VEHEHw58COAly+RGdZ5SbPOJsSEMrsxf4tuHv/dU19IGApDk8mVeff1N
      UtFNOo5SjI6OYkZTDA4OEbWttq0Md2vhBq8OnWq1GTtGtTjFzI2f4DlFDHPzGh5KSVSxyvWP
      Z/Bq/RzrqTOWvcQrh09wpDvKVzdvstAIODEQ4Xe58xz73kkO9T74YLyBwauGwY36EoXYIIax
      cXuTudt899gPMDf5/aNosQskGbt6maX8Cp9/chYn2MSXEwZn3vs2r792ms000i7IXd7lcLdQ
      SpGd+YyJS3+J75Ye6fIEtSqhSYfB+YNE6t3YVgiUQuBzK5sDYTKYSiCExbH+I5yOv0xv1ke6
      Dz8SawiDl0I23bVFpNzY/3UDl4nV2091XS0WgCK7uIgyLMKROBFr71cF8jcT8R7G9+pMX/sb
      Fu98CI8IQ0jPxZgt0zfVT2/jKJaIMJjpRThliHaRCIUZ6YqxWimz6vgQNPj0+lUWawFd9UN0
      TcSQpYczwoYQvBSySdcWCTbI/pqGyY3lp9tWqQ0SYSADn8Jqjkh3mlhoa7f4dk2EnZ08x9uH
      3mq1GdtGrTzH9LW/xXOKm971lQxgtUJqNUNC9d/nrysc16EeQNI2KToe3bEIXiBxXQdlWNhI
      Kp5HMtq8Abqqwmr3LHIghviGSyOV4pbrsBodxDQf7CeB9PlPb/35Ez8n0BYCeBraUQBuPc/n
      Nz7ktZFXCUczhCJpDCvyTJnKVrIy9yWLt3+OUmrja1AKWa4QWwrT5Y9giu3xT6UKKISmqQ0H
      GJEHS+UopRh1HbLfEIFSijf3v82b+99+ora0ALYBp55jeeo3FJYuoQCBat4VhcAwQ4QjGexI
      GjvSRTjaQyjSTSjWRyjSjWG0Jg6hlEIGDp5Twm3k8JwynlPCc4oEbhWnkcOtr24afQkadUKL
      AenaCLaIbbvIlVLUxAqFwVVEd/Kh3425DZajg5hm6O7PEuEk//HN//JE7bRBFGhvopTCra+y
      NPkristXQBgIIdYW8wmEudZxlMSpr9CoZe/7Y4lSzcdALTtOKJbBDncRiqSbr2gPkXgfVigJ
      62d8XLjx/vuYkvheFbeRx63n8d0yrlPEd0r4XhWvUcRzSyjpowBDmPCNji6EeKjzK9UUtrFc
      pSffT1T0IHaoXL0Qgjh9hOcTrFSmCIZiiLWokxCC46EIorbIUqwpAiEEpUaRhdI8Q6l9W2pD
      KaVHgCdFKYVTXWJp6tcUs9cQwtzWu1+zk/koFSCEiR3pIhTJYIdThNbcqlC0h8Cr4TnFZudu
      FPG9Cr5bxmsU8b0aoBDCQBj2ttinlELlSySzSVJyeMsL1rYDpSQFa4bqiIeIPOhS3m7UWIgN
      YpphlFIc73uB7x///cee0/Udvrj5My2AraKUol6ZZ3ny15RWb7bQdZEo6a+NONsrvo3bU8h6
      jeiCQdrZj2k8+YJFpRQoReD71Op1lBAk4/FH5hE2oq5y5PuWUT2JB677jlNjPjKIaYUxhMF/
      fuvPsc2N5yNSSUYXLjF66x/YLwLtAj0OpSS10gzLU7+hkhtHGOaGnV9JiaxWMUoeygRlA4YB
      hgBTgGkiLBthrN05hQAECPFEnVgIA2HuzmND0nWxlhr0locJG6knCporpZC+T71ep6AkBdum
      HI3gZoYQUtKdy7O/6tH1BEKIigyh5Tir1SncfSGMtUTokXAMo7HIbGQAaYa4vTLGiwMvP/T3
      uWqWc9d+Qqw8yRE7Aph6BNgMpSTVwiTL07+lkr+zYRZSKYXyXES+TqwYI+H3Yxvxe79TAVJ5
      SOUjxdqLtZfwkZZCmgplyObPjABpKZQtUKZoisdgTTxWU1BCPLj84AHfX919KSlBSZBr3yuF
      UDTD+EqthfObX4Vk7X3NYyEFQgqS1R7iDGxJoM1JdUCj0aDk+xRsm1IkTCOZgE0y9sLzmkLw
      PLpiWxeCUoqyOUdpXw0Rb07AlVLMuA2mI/0MdR/k37z6Z3ft9gKXi3d+xer0b9lnhTDuux49
      AnwDJQMqhdssT31MtTiFYZgPdX4VBMhKjVBekKiliYmDCGE+cIdsTiItjEd9xMHaayM7VICU
      /n3iCZoiWfseQGCsvcTdY+4eN7+imkdCGc3Rg/XJrbH29REj0CP6/XqHdx2Hsu9RsCyK4RD1
      njQqHL4r0lvXvqZQN3jx6D6u3pzghVdP0puMcunCFwR2hqFum5+Nz/HdI0d5xVRbEoIQgpQc
      ITxTYjUzj+qLIwyD/aEIwllmMq8oNYqkIimmV0a5fvOn9PplRux77pv0XIyVuhbAOkoGlHOj
      LE9/TL00gzCsBzq+UgrlNDDyLvFynLh/ANuI7VguXQgT0zQx26REgFobVTzXpeK65A2j2eG7
      UwTR6CaL4hS1ahU71sfizCymbaGkAiS1So3U0BClus97757g2koEORCjO5fnQM0nFYs9Vghh
      kWIwFyNXm6QxbGCEwozYEYST5cLUpxiNPGr1OvvtMKzNCaTnYKw06CqmSagD2gWS0qe8cpPl
      6Y9pVBbuhjPv/j7woVwjnDeJ1zNERWbTCMi63yuEaPr6T+jftxvrHb7quhRQFMNhqrEYfjQC
      W3FXlGJxYY7VxVlUrAfLFrieyfFDA6yu5FhcXCAciWHjER9+gf1r+0MIzyOdyzPi+XRtQQgA
      FbFIYbCI0ZVAKUXec0jZIay1/5V0HYxVh2Sxm7jqb4Z+6eBEmAw8iivXyE5/glNdfiDtrpRC
      NmpYeZ9YOUk86MMyNt7CJ/B8HKdBWQbkTJOabWMohaUUplIIKTGkxJQSG7AQWKLprBiopouP
      wBQC0zAwjLV8wvprXUiGsamY1qMs6j7/f/3fqtZ+rpRCKoWUkmD9WAgka9MCQKLwFQQofAS1
      cIhyLIoXjYL1NM6ColYuUnahP50km12hK50hUAq/VsIzInTHbFYKFfp7Mw9dn3A90vmtC8FV
      FXJdcwQD0bs5g+Yd/+GOf7eNThOADFwKy1fIznz6UKZT+h6UakTyNgmnl7DoejgZJCWu41Dx
      XPJCUIxEqMdjBJHIY9fGP2iIbE5GpUQohbH2VUgJQYARSAwZYMmmmIw1IRlSYSiJQiANgRIC
      ZRjNziwEwdpLGgJpGCjDAMNEGQZqbQItBc3jNXGt/7xdR6snEYJUPoXQLNUBB7MsN+34d8/d
      SQKQgcftr/8njerS3Y6tlELWqlh5SbySIq76MMW9MKNSisB1qToORSAfsqnG43hbdQM028ZW
      haCUwlMVLBHbtOMD+K7bWZNgpQLcRh4hDKTnQrFOpBAi6Q4REommKARI36dRr1NUkrxpUorF
      cNNdKMt6sru8ZltRIZvcQD95tzlH2O97dMUT93IrawghCInkJmcBt9FgyXVZSCY6SwAAslbD
      zDZIVbqJMYIhbBQSt1an5HsUDKPp1vT1IG276SZsESUlvuuthebXBta746t64Fht9HN1X+RR
      qeaxagY2YS2OT/M9ct2VMWiux1l3Y9bnEea9ucRuIKVE+j4yaOYelFRNd02uz3tMDMCSAiWg
      JnxcC8xwCNN+sm6oQja5wX7ynkd6Ncd+z6cr8bAQvolTq7Hg+yx2JXH6e0GIzhKACASDswcx
      PEHgOpQaVQqGQcG2qXSn7vnxW+g0MgjwGy6GFxDFIipNElaEuBnHuG8hmTDW4vBiLTeAeHCS
      Cw+0t+HRQ+Y0BdHMZylkIPGljx8E+H6AJwMCJfGVRMrm1wBJIBSBACUgUBK5/h7BXTGxPtk2
      RHNCvdahzbsd2cAUZvN7JbCFiSVMLCNEyIgSMixs28I2rWbeQfDANcO9ibkb+BQbFUqVOlXh
      U8VDhS3sSHhryTfbJjc48EghKKVo1GrMS8lSdwovHn/gA+0oASghyNZ9VlyXcjyG25O5l119
      BIHn4zsOlqeIC5uotEjYEbrCGeYLSxweGubc9a/pOXKadDzMwsIdskGUI10W5+7M8PbLp4nb
      TzdfKOQX+HJ8kndOnmFx9jrRzGEOZVLkVmcZzTm8dWSEr8ducPLF03RFtna3v3/ap5QC6fLp
      1Qt0ZQ7SJcrMVOH0gRFyuTmuzM5z+MALuMU5YplDvDDQC2y8OvX6+CVWvQgnh7q4nK3y7vGj
      KOnxu+tf0zt0goQsMVkKOHP0MIYQRIwQETvDwJodUilqTp1CqUJZulTxaJgKMxrGesQooew1
      18j3Sa/mOOD5pBIJatUqcwKWM+mHghRKKdzqXkmEKcXVi+coVBVv/6t3CD3lqC6B8YF+guDh
      9Ot6p/BdD+m4hH1BzLCJKYukHacr0o+daCZT1v/55fw8n4yN0ZtM8cLRl7g5fZu+E8e4lS0x
      EM6zkniBl/qT3FjMcmb/4FPZvLS6wrun3iLIT1KPDHE0GW1+HjMLDEXhkxs1Dg8OcHVqmreO
      HNzSOe/vvEII6uUS6b5DvDzUz3I+TLw6g2XHODhynP5UgtGyyZH9L3B27AYvDvZtclZFzRe8
      d+IYX1y5wPF0iOt5lxe74PjBFzg/fgtbGPTGBUu1AwzGvhGOFM1QcDIaJxmN3/t/BAGFeplS
      pU4FjwoeKmxiR8IPRq6EuE8IAbF8runGhkLN362FiL1ag5gLGRFlMD68NwSgUES6+jjZ51No
      QP8z7qe9/mH4jguuTzgwiBkh4likQt2kEnHMLUR4fnH+M4rlBisNl9WFJV4/8RIYcCQT4+yt
      67zRf5yxxSx9+zJPbWsiFuGzc7/EivXguvMsr3bzr0+dJGb53M43MCIR+lNJlorLT92GGYmy
      PPo1C7lVjqcj9PQeImY33Ygbi3leP/EK4xNXMEOP2MVTSaRb5R/OfsHvHTvIhevn6HvxBEKE
      mZ2fIBRNEHJL3Mm79A8/PvC43rFty6IvmaaPZsRPKUXdaZAvVyhLh4pyaVgKI3LfXMK2qPb3
      3xNRrUHEUWREhMHYENHEvZzOnhCAQOCWVrhaF7z1DJtUCgSxaoDZkMRFiGQoRSIVw3iCie79
      /OkP/x0TizOE3RJXC8uE51IMJKNUG3UygycI1bNUXJ+RZyjf4gcSYSc4c/w4F0ev0ZvpZbGY
      IxqKoEzF6YMDfHT+Am++cuap25CBj8JgoDvF+NQYbrSIbR6mP5Ukk+pDBHVmciWMWM/mJ1EB
      vhL0pDI0nDoyfoBTaZ+FfJW5Uplk1wCxUAjLM4jYT79+RAhBLBIldt+jkn4QUKpXKFZrVIRH
      VXkEliDsC3pEhP5oP/HMxkWXOysP4Pos/ONnKP/5q9yguR+F53vNciyP4e4I4DgOtdqzVdrd
      TSqVrW+osI6SCuOVkWYWVvNcs9WQQ0eNABrNN2mD4rgaTevYMwLwnTrL2Zwuj67ZVvaGAJTi
      1q2b+EGgBaDZVvZEGBQU5XKRWt0h1t1DwpJtWx5ds7fYIwIQ7BsYYLlQwzYFltW+5dE1ewsd
      BdJ0NHtjDqDR7BBaAJqORgtA09FoAWg6Gi0ATUejBaDpaLQANB2NFoCmo9EC0HQ0WgCajkYL
      QNPRaAFoOhotAE1H0wbLoQM+/+gXFByTd7/7HTLx9tgRRdMZtMEIIFnO5unqSmHu0KbLGs1m
      tIEALF55+SiFap3QU+1CotE8PW0gAI87s0WO9djMZEutNkbTYbRcANVyg0wKzt/OMtTziNqT
      Gs0O0HKfw3ccIok0B4dTSF2xTbPLtHwEUKrG9RvTBLUCq6VGq83RdBgtF4BphfEqWe4sFulO
      bLwVqUazU7RcAMl0mohpkgzblKrupu9TMmBiYmoXLdN0Ai2fA0CI7/34j5mamqU3tVkSTJGd
      n2I2W+TQoQP3Nn7WcwbNM9JyAazMj/OzD86ybyBFz8E6icjDxa6UDLh5a5xi3aXceJV4yLgr
      Ao3mWWi5AFwnIBG3IJQgk9p47yNhWHzn/R+RzS6TijYFYhjGlrYx0mgeRcvnAJn+/bxwZJiA
      5iZpj6Kvr3+XrNJ0Ci0XQCQeYiFbYSAqmVsp6+rPml2l5QIAg3QyxHK5zsLUJHpaq9lNWi6A
      hckpGoFPw4FXTr205b2dNJrtoOWT4KFDByhUA06+GMHxHt7AWqPZSVo+AoDB6sI4n5y9iKXr
      /Wt2mZaPACCxwkm+/60zxKNaAJrd5aERoF7O8uXnX3F7evFusmmz1/YgyM+N83d//1MWi3ox
      nGZ3eWgECEUSRMIChc+5zz7FMyL0dNuUCxUiqR5isRAVXxE3LY4dPbQNJgSUKw4Dff1Uqg3o
      3jgZptHsBA+NAIHnIDGpVasM7D/CkeF+hGGghKBveICZuRzh8hLxvuFtMSAIDF579wyhVDeH
      Bru35ZwazVZp8R5hAb/4h5+Sb/i89/6P2d8b3/Jf6j3CNNtBi6NAAaVCBb9e5uc/+3+sVPQc
      QLO76F0iNR1NG4RBAz766U8I9R3gyIsnGe7Zuhuk0TwrbZAIUziNGteu3EQYbWCOpqNogx4n
      SPcPkElHGRsb16tBNbtKGwhAUqwE7OvpYnLsDl6rzdF0FG0gAJuXX9xPwbP5wz/+AXoxhGY3
      aYNJsMsXv/kckv3UPYEuj6vZTdpgBDA5+c67pDNJuuKhVhuj6TDaQACKm5cuoMwISk+BNbtM
      G7hAJmfe/RaOHSOkqzxodpk2GAE8vvz4Y8avXGdupbzxW5SikJ3nxvgUezNvrWlX2mIESPd2
      U7HCHBzYfDWosqIk/ALlQJE00YWxNNtCGwjA4NTrp/nrv/0nFt95m4Ob7BHg1ctYvftImiCl
      REpJEOhniDXPRhsIIGBhscAf/ds/pTex+QZ5S0uL+CJPd9dporaJaZpYekslzTPS8ucBPv2X
      D1iu1FhY9Piv/+3fEw9vrVPr1aCa7aDFk2DB0Mh+4tEIpqHwdbVnzS7TNs8DBJ6HNExsc2ua
      1COAZjtoGyfatG1dFU6z67RBHkCjaR1aAJqORgtA09FoAWg6Gi0ATUejBaDpaLQANBsSBJ2R
      lNQC0NxFKUW14fKbi5P85c8vdYQI2iYRpmkdSinqjs+5W/NcubOMUopIqDO6RmdcpWZD1jv+
      +dEFrtxZJpASIQTiMdvVPk9oAXQgSinqrs/Xo4tcvrOEH8i7nd73XXCX2N9dRojTLbZ059EC
      6CCUUjTcgK/HF7h8exnXDzCEQCpJ0CjQZcwyEl9msM8hFIpBBxQp0ALoEBquz8XxRS6NL+H4
      AQJF4Naw5ALDkQWG+8vE7lal0S6Q5jmh4fpcvr3ExfElGp6PDDyEm6UnNMtIV55MzN/Q55f1
      Okj53McJtQCeUxzX58rEMl+PLVJtOCivRFLMMRJfYqC3gW2ud/qN7/ZBLocKgue+h+yZy2tU
      S1Rc6E2nWm1KW+N4Plcnsnw9tkChVCSqFjkQmWe4t0IstD7Z3eCOLwMC38NxPVxXQFHQCYUq
      94YAlGT8zgQiUMRSrxHTT848hOsFXJvMcvbGNLXyPH32PG91r5KO+hjGvbu9Uoog8PA9D8cJ
      cH2LhmPjqTi+7AMjDkaEiKzSCXOBPSEABYRjCXrtgKqHFsB9eH7A1YllvrpyE8OZ4EB8mYGh
      BiELlJJ4noPn+jQcgetbOF4EX6aRRgpEBEQIsSYQ0YGf654QgEBgejXGS4I39rfamvbADyQX
      R2e4evMC8WCC08k8dryO4wQU8zYN18aTMXzVC2YShA2YCFOAuYV7e3s8Kr7j7LlFOs0AAATI
      SURBVAkBIARHXjzJkVbb0SbMLUzxq1//XyLeLH02uG6IuUqCQAwijChgwf2RnQCa46i/5TaM
      Wr0jKu/drQrhOA61Wq3V9myZSqVCIrFxFbnNWC+naOzgXmRSyh09P4DnuQgVoBDsVJxSSkko
      HN6RZRG78RlttY27I0A4HCYc3rwyWzvypGVRpJQopTB3sAq1UmrH19L4vr/jVfF28jrayf69
      4QJtE7ux0Gs3FpLtpIDX2cnraCf793SeT8oAqRRyixXlhBCP9GulDHA9D6UUnuc2Q4a+j+8H
      KCnxPH9H5obqCa4BHvznrtsq5ZqtgUTddx2+vzM2fxMpA6RUKCU3fY5g3QVt2q8IfO8bn63C
      c5vXIoPm+XaaPT0CzNy4SDm+D6Ne5MUTx3D9ANuyMAwDKSWe62KHw/iu25wUCoO52Wn27Rsh
      HLJxXJdQKEQQ+JimzeLMJIvzcyT7D5DLr5DuHULUc6yWfTJJg3zR4cSrp0k/oojv06ACn5mF
      JQb7ezFMG6ECfKma1yIEcq1j2OEwKggIFIRsCyklfr3ErTtTCCuKWy0SiAj7h1LMzyzSf/gw
      C9MzvPbGGUI7fNNdmrnFYiXOvrjL7VyDM68cB8PCNETT9ZSSRr1MqSoZGOjBNiS3x0YpVFxS
      MZNiscKB48dZWZhHhJNERR4rfoKDw8kdtXtPCyAcy1B1CzR8xeiNK9TrDna8i97uOMtLq1y5
      cYOXXnsDN7eKpwThRJKULbl57SqG4XPl2hinTr1O0fV48/RJent7qXgGyIAzb5zmzsQcPT29
      hLoM/HqZk8f3kXdq2y4AACV9vvzNh1RCA4wkFV5gkuhKMNjXxVIp4Mb5Lxg68SaqOM3A4D7s
      eBeeCnFoqJt0Mkk4lqDW3Y1VKxHr7iHVUAz09GG4uxPYMEIJbOoUPYN01OTsxx+So5ejvRaR
      dD/5pRV6B3tZXsySK5Y49fJR+nrShFMWXqPMW8Pd3HHjpBJxUn2DxMNdZLO7YPfON7FzmJbF
      gZEhcrkStmni+op9B/YzPrHAgaEMh4+doD/TzcGjxzl06DBDvd2YBri+JB5PcfSFl+jpinPs
      hReJ2ibXrl6hXMqTiNp8dfY8pm1z9dp1irkiQjpcGpsgGXuyyNPjUMrj+qWvwYwSSWbIJCP0
      DIxw5MAQlim4cWOMRq3OwMFjREyfkUPHOXTsBaZGbzI81ENpaYLx2RWqjk9hforFisfUzasU
      Cjlyq1nGRseZmFnYVps3wjBM0gmLwIxh2wI7kqanK0ZX7z4ODQ8iCPCl4PCxF8kkw+DXuHRt
      lGKxgOE3+PLaPOHyNBNLeQrFMmPXrzN++/YTBG6fjrYpjvukdHJxXLeaZy7vcXikv9Wm7Hn2
      tAvUqYTiaQ7HW23F88GedoE0mmdFC0DT0WgBaJ4bsgszVJyA/PICxaqz6fsKhfzdYz0H0Dw3
      fPbJBwwe+y7F8U+JHfs+I0mX1MAIjdwyNWkzce1zMkffYfLKbzn99vscOzSiBaB5frAT/TiF
      aULxLorzo7jd/VRufYishoiEAmQkSk+mmykzxLXL5zh0YFgLQPP80Nc3RFiWCQ+dpO5JFqfG
      6Bk6TDgwiRgO4XiI2bkF9h88gmWsLQ7QeQBNJ6MnwZqO5v8DG710Hdry6M4AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Avg prec temp' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg prec temp (2)' width='192'>
      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
      Ayhvvvnmm7tdaalUQpIkVPVR/3I7nWiWjGGanDhyiJVkiqagH7vLgYWHtiYXhuTB5fjshiHb
      HChmCadDRfI20uA08Da2Y+oGhmVy8NBRMsllGspMVtfjcjrRTAvTNDly7CSJ6CKtrSEUu5uO
      thYy2Tz1dVvU71Fs2CUDu9MFDjcdfgW5vgPFLNHQ1IzHIWNz+LDbtjZkcLlcaLqOgkHXwRPk
      EhHa2pqQFCft7R3ks2nqA4Gt2SarOBRQXD6QoD/kJO/rwGkWCYSaCPrsGJIH9xad80nnsQ7a
      rl+9RD6XxSaZXL1xCwyNG4Nj5AoGhdVFxmeiOF1b65Qyy9PcmVigaMqkFiaZjWWZGr5BPJ3B
      bVO4des6Jba+E337xlUymSw2ReLG9ctINhuXLw+Sy+dZmJlkbGyc1XzlqNhP0NOLXB2apqDp
      ZGOL3JtfJTp+k0giTXY1xdjoPSZn5rZ8zHTo5jWS6SyyYuPuzSsYksKVy7fI5vNE5qYYGxsj
      kdnaLr6ZX+Hy7THy+TzFdIJb03Gy4UHCsVVyuTT3RkeZmJp5arKzPdY5gGEYWBYoivxwJ9A0
      DJBkZAlMQNni7qBlmRiGiSTLD1Z2JMDENC1kRcF6UP9WdwdNw8Dc1Dbpfs0P/raV+izLwjAM
      pAf39ckD/qReyzTv37Mibynpk2kamKaFoiif2vZAtVuSeHjP8hZtW//MZcD4xDbLBCRkRdlB
      Qqonh/8PoaNJGm9VGVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Daily Weather' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      3nT+P23dH4bkGLFtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Days' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Days (2)' width='192'>
      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
      MxmU8PfXrft/GExf7LCS2cMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Days (3)' width='192'>
      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
      ofn/AbFiJnTIBOJ7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Geometry Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Incident Types' width='192'>
      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
      XE0UQHC1vwBLKVDWXlP2ZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Shooting' width='192'>
      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
      nvX/AfsGz4hmrwi7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Slider Time Date' width='192'>
      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
      /wd0rsHJ/ljYxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='peak_time' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
